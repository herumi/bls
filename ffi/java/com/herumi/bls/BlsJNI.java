/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.herumi.bls;

public class BlsJNI {
  public final static native void init(int jarg1);
  public final static native boolean isDefinedBLS_ETH();
  public final static native long new_SecretKey__SWIG_0();
  public final static native long new_SecretKey__SWIG_1(long jarg1, SecretKey jarg1_);
  public final static native long new_SecretKey__SWIG_2(int jarg1);
  public final static native boolean SecretKey_equals(long jarg1, SecretKey jarg1_, long jarg2, SecretKey jarg2_);
  public final static native boolean SecretKey_isZero(long jarg1, SecretKey jarg1_);
  public final static native void SecretKey_setStr__SWIG_0(long jarg1, SecretKey jarg1_, String jarg2, int jarg3);
  public final static native void SecretKey_setStr__SWIG_1(long jarg1, SecretKey jarg1_, String jarg2);
  public final static native void SecretKey_setInt(long jarg1, SecretKey jarg1_, int jarg2);
  public final static native void SecretKey_clear(long jarg1, SecretKey jarg1_);
  public final static native void SecretKey_setByCSPRNG(long jarg1, SecretKey jarg1_);
  public final static native String SecretKey_toString__SWIG_0(long jarg1, SecretKey jarg1_, int jarg2);
  public final static native String SecretKey_toString__SWIG_1(long jarg1, SecretKey jarg1_);
  public final static native void SecretKey_deserialize(long jarg1, SecretKey jarg1_, byte[] jarg2);
  public final static native byte[] SecretKey_serialize(long jarg1, SecretKey jarg1_);
  public final static native void SecretKey_setLittleEndian(long jarg1, SecretKey jarg1_, byte[] jarg2);
  public final static native void SecretKey_setLittleEndianMod(long jarg1, SecretKey jarg1_, byte[] jarg2);
  public final static native void SecretKey_add(long jarg1, SecretKey jarg1_, long jarg2, SecretKey jarg2_);
  public final static native void SecretKey_sub(long jarg1, SecretKey jarg1_, long jarg2, SecretKey jarg2_);
  public final static native void SecretKey_mul(long jarg1, SecretKey jarg1_, long jarg2, SecretKey jarg2_);
  public final static native void SecretKey_neg(long jarg1, SecretKey jarg1_);
  public final static native void SecretKey_getPublicKey__SWIG_0(long jarg1, SecretKey jarg1_, long jarg2, PublicKey jarg2_);
  public final static native long SecretKey_getPublicKey__SWIG_1(long jarg1, SecretKey jarg1_);
  public final static native void SecretKey_sign__SWIG_0(long jarg1, SecretKey jarg1_, long jarg2, Signature jarg2_, byte[] jarg3);
  public final static native void SecretKey_signHash__SWIG_0(long jarg1, SecretKey jarg1_, long jarg2, Signature jarg2_, byte[] jarg3);
  public final static native long SecretKey_sign__SWIG_1(long jarg1, SecretKey jarg1_, byte[] jarg2);
  public final static native long SecretKey_signHash__SWIG_1(long jarg1, SecretKey jarg1_, byte[] jarg2);
  public final static native void SecretKey_share(long jarg1, SecretKey jarg1_, long jarg2, SecretKeyVec jarg2_, long jarg3, SecretKey jarg3_);
  public final static native void SecretKey_recover(long jarg1, SecretKey jarg1_, long jarg2, SecretKeyVec jarg2_, long jarg3, SecretKeyVec jarg3_);
  public final static native void SecretKey_setHashOf(long jarg1, SecretKey jarg1_, byte[] jarg2);
  public final static native void delete_SecretKey(long jarg1);
  public final static native void setGeneratorOfPublicKey(long jarg1, PublicKey jarg1_);
  public final static native long new_PublicKey__SWIG_0();
  public final static native long new_PublicKey__SWIG_1(long jarg1, PublicKey jarg1_);
  public final static native boolean PublicKey_equals(long jarg1, PublicKey jarg1_, long jarg2, PublicKey jarg2_);
  public final static native boolean PublicKey_isZero(long jarg1, PublicKey jarg1_);
  public final static native void PublicKey_setStr(long jarg1, PublicKey jarg1_, String jarg2);
  public final static native void PublicKey_clear(long jarg1, PublicKey jarg1_);
  public final static native String PublicKey_toString(long jarg1, PublicKey jarg1_);
  public final static native void PublicKey_deserialize(long jarg1, PublicKey jarg1_, byte[] jarg2);
  public final static native byte[] PublicKey_serialize(long jarg1, PublicKey jarg1_);
  public final static native void PublicKey_add(long jarg1, PublicKey jarg1_, long jarg2, PublicKey jarg2_);
  public final static native void PublicKey_sub(long jarg1, PublicKey jarg1_, long jarg2, PublicKey jarg2_);
  public final static native void PublicKey_mul(long jarg1, PublicKey jarg1_, long jarg2, SecretKey jarg2_);
  public final static native void PublicKey_neg(long jarg1, PublicKey jarg1_);
  public final static native void PublicKey_share(long jarg1, PublicKey jarg1_, long jarg2, PublicKeyVec jarg2_, long jarg3, SecretKey jarg3_);
  public final static native void PublicKey_recover(long jarg1, PublicKey jarg1_, long jarg2, PublicKeyVec jarg2_, long jarg3, SecretKeyVec jarg3_);
  public final static native void delete_PublicKey(long jarg1);
  public final static native long new_Signature__SWIG_0();
  public final static native long new_Signature__SWIG_1(long jarg1, Signature jarg1_);
  public final static native boolean Signature_equals(long jarg1, Signature jarg1_, long jarg2, Signature jarg2_);
  public final static native boolean Signature_isZero(long jarg1, Signature jarg1_);
  public final static native void Signature_setStr(long jarg1, Signature jarg1_, String jarg2);
  public final static native void Signature_clear(long jarg1, Signature jarg1_);
  public final static native String Signature_toString(long jarg1, Signature jarg1_);
  public final static native void Signature_deserialize(long jarg1, Signature jarg1_, byte[] jarg2);
  public final static native byte[] Signature_serialize(long jarg1, Signature jarg1_);
  public final static native void Signature_add(long jarg1, Signature jarg1_, long jarg2, Signature jarg2_);
  public final static native void Signature_sub(long jarg1, Signature jarg1_, long jarg2, Signature jarg2_);
  public final static native void Signature_mul(long jarg1, Signature jarg1_, long jarg2, SecretKey jarg2_);
  public final static native void Signature_neg(long jarg1, Signature jarg1_);
  public final static native boolean Signature_verify(long jarg1, Signature jarg1_, long jarg2, PublicKey jarg2_, byte[] jarg3);
  public final static native boolean Signature_verifyHash(long jarg1, Signature jarg1_, long jarg2, PublicKey jarg2_, byte[] jarg3);
  public final static native void Signature_recover(long jarg1, Signature jarg1_, long jarg2, SignatureVec jarg2_, long jarg3, SecretKeyVec jarg3_);
  public final static native void Signature_setHashOf(long jarg1, Signature jarg1_, byte[] jarg2);
  public final static native void Signature_aggregate(long jarg1, Signature jarg1_, long jarg2, SignatureVec jarg2_);
  public final static native boolean Signature_fastAggregateVerify(long jarg1, Signature jarg1_, long jarg2, PublicKeyVec jarg2_, byte[] jarg3);
  public final static native boolean Signature_aggregateVerifyNoCheck(long jarg1, Signature jarg1_, long jarg2, PublicKeyVec jarg2_, byte[] jarg3);
  public final static native boolean Signature_aggregateVerify(long jarg1, Signature jarg1_, long jarg2, PublicKeyVec jarg2_, byte[] jarg3);
  public final static native void delete_Signature(long jarg1);
  public final static native long share__SWIG_0(long jarg1, SecretKeyVec jarg1_, long jarg2, SecretKey jarg2_);
  public final static native long share__SWIG_1(long jarg1, PublicKeyVec jarg1_, long jarg2, SecretKey jarg2_);
  public final static native long recover__SWIG_0(long jarg1, SecretKeyVec jarg1_, long jarg2, SecretKeyVec jarg2_);
  public final static native long recover__SWIG_1(long jarg1, PublicKeyVec jarg1_, long jarg2, SecretKeyVec jarg2_);
  public final static native long recover__SWIG_2(long jarg1, SignatureVec jarg1_, long jarg2, SecretKeyVec jarg2_);
  public final static native long aggregate(long jarg1, SignatureVec jarg1_);
  public final static native void setETHserialization(boolean jarg1);
  public final static native void setMapToMode(int jarg1);
  public final static native void verifySignatureOrder(boolean jarg1);
  public final static native void verifyPublicKeyOrder(boolean jarg1);
  public final static native long new_SecretKeyVec__SWIG_0();
  public final static native long new_SecretKeyVec__SWIG_1(long jarg1, SecretKeyVec jarg1_);
  public final static native boolean SecretKeyVec_isEmpty(long jarg1, SecretKeyVec jarg1_);
  public final static native void SecretKeyVec_clear(long jarg1, SecretKeyVec jarg1_);
  public final static native long new_SecretKeyVec__SWIG_2(int jarg1, long jarg2, SecretKey jarg2_);
  public final static native int SecretKeyVec_doCapacity(long jarg1, SecretKeyVec jarg1_);
  public final static native void SecretKeyVec_doReserve(long jarg1, SecretKeyVec jarg1_, int jarg2);
  public final static native int SecretKeyVec_doSize(long jarg1, SecretKeyVec jarg1_);
  public final static native void SecretKeyVec_doAdd__SWIG_0(long jarg1, SecretKeyVec jarg1_, long jarg2, SecretKey jarg2_);
  public final static native void SecretKeyVec_doAdd__SWIG_1(long jarg1, SecretKeyVec jarg1_, int jarg2, long jarg3, SecretKey jarg3_);
  public final static native long SecretKeyVec_doRemove(long jarg1, SecretKeyVec jarg1_, int jarg2);
  public final static native long SecretKeyVec_doGet(long jarg1, SecretKeyVec jarg1_, int jarg2);
  public final static native long SecretKeyVec_doSet(long jarg1, SecretKeyVec jarg1_, int jarg2, long jarg3, SecretKey jarg3_);
  public final static native void SecretKeyVec_doRemoveRange(long jarg1, SecretKeyVec jarg1_, int jarg2, int jarg3);
  public final static native void delete_SecretKeyVec(long jarg1);
  public final static native long new_PublicKeyVec__SWIG_0();
  public final static native long new_PublicKeyVec__SWIG_1(long jarg1, PublicKeyVec jarg1_);
  public final static native boolean PublicKeyVec_isEmpty(long jarg1, PublicKeyVec jarg1_);
  public final static native void PublicKeyVec_clear(long jarg1, PublicKeyVec jarg1_);
  public final static native long new_PublicKeyVec__SWIG_2(int jarg1, long jarg2, PublicKey jarg2_);
  public final static native int PublicKeyVec_doCapacity(long jarg1, PublicKeyVec jarg1_);
  public final static native void PublicKeyVec_doReserve(long jarg1, PublicKeyVec jarg1_, int jarg2);
  public final static native int PublicKeyVec_doSize(long jarg1, PublicKeyVec jarg1_);
  public final static native void PublicKeyVec_doAdd__SWIG_0(long jarg1, PublicKeyVec jarg1_, long jarg2, PublicKey jarg2_);
  public final static native void PublicKeyVec_doAdd__SWIG_1(long jarg1, PublicKeyVec jarg1_, int jarg2, long jarg3, PublicKey jarg3_);
  public final static native long PublicKeyVec_doRemove(long jarg1, PublicKeyVec jarg1_, int jarg2);
  public final static native long PublicKeyVec_doGet(long jarg1, PublicKeyVec jarg1_, int jarg2);
  public final static native long PublicKeyVec_doSet(long jarg1, PublicKeyVec jarg1_, int jarg2, long jarg3, PublicKey jarg3_);
  public final static native void PublicKeyVec_doRemoveRange(long jarg1, PublicKeyVec jarg1_, int jarg2, int jarg3);
  public final static native void delete_PublicKeyVec(long jarg1);
  public final static native long new_SignatureVec__SWIG_0();
  public final static native long new_SignatureVec__SWIG_1(long jarg1, SignatureVec jarg1_);
  public final static native boolean SignatureVec_isEmpty(long jarg1, SignatureVec jarg1_);
  public final static native void SignatureVec_clear(long jarg1, SignatureVec jarg1_);
  public final static native long new_SignatureVec__SWIG_2(int jarg1, long jarg2, Signature jarg2_);
  public final static native int SignatureVec_doCapacity(long jarg1, SignatureVec jarg1_);
  public final static native void SignatureVec_doReserve(long jarg1, SignatureVec jarg1_, int jarg2);
  public final static native int SignatureVec_doSize(long jarg1, SignatureVec jarg1_);
  public final static native void SignatureVec_doAdd__SWIG_0(long jarg1, SignatureVec jarg1_, long jarg2, Signature jarg2_);
  public final static native void SignatureVec_doAdd__SWIG_1(long jarg1, SignatureVec jarg1_, int jarg2, long jarg3, Signature jarg3_);
  public final static native long SignatureVec_doRemove(long jarg1, SignatureVec jarg1_, int jarg2);
  public final static native long SignatureVec_doGet(long jarg1, SignatureVec jarg1_, int jarg2);
  public final static native long SignatureVec_doSet(long jarg1, SignatureVec jarg1_, int jarg2, long jarg3, Signature jarg3_);
  public final static native void SignatureVec_doRemoveRange(long jarg1, SignatureVec jarg1_, int jarg2, int jarg3);
  public final static native void delete_SignatureVec(long jarg1);
}
